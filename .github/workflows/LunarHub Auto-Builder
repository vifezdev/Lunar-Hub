name: LunarHub Auto-Builder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensures full commit history for SHA retrieval

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven

      - name: Get Short Commit SHA
        id: git-sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Update plugin.yml Version
        run: |
          PLUGIN_YML="src/main/resources/plugin.yml"
          
          echo "Current SHA: ${{ steps.git-sha.outputs.sha }}"
          
          if [ ! -f "$PLUGIN_YML" ]; then
            echo "Error: plugin.yml not found at $PLUGIN_YML"
            exit 1
          fi
          
          cp "$PLUGIN_YML" "${PLUGIN_YML}.bak"
          
          sed -i "/^version:/c\version: \"${{ steps.git-sha.outputs.sha }}\"" "$PLUGIN_YML"
          
          echo -e "\nUpdated plugin.yml content:"
          cat "$PLUGIN_YML"

      - name: Build with Maven
        run: mvn -B install --file pom.xml

      - name: Rename JAR and Prepare Artifacts
        run: |
          mkdir -p release-artifacts
          SHORT_SHA="${{ steps.git-sha.outputs.sha }}"
          mv target/LunarHub.jar target/LunarHub-${SHORT_SHA}.jar
          cp target/LunarHub-${SHORT_SHA}.jar release-artifacts/

      - name: Delete Old Release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq -r '.id')
          
          if [ "$RELEASE_ID" != "null" ]; then
            echo "Deleting old release with ID: $RELEASE_ID"
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          else
            echo "No old release found."
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-build
          name: "LunarHub Build #${{ github.run_number }} (${{ steps.git-sha.outputs.sha }})"
          body: |
            ðŸš€ **Automated Build for LunarHub**
            - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            - Message: ${{ github.event.head_commit.message }}
            - Triggered by: @${{ github.actor }}
          prerelease: false
          draft: false
          overwrite: true
          files: |
            release-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Force Push Updated Tag
        if: github.event_name == 'push'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -fa latest-build -m "LunarHub Automated Build ${{ github.run_id }}"
          git push origin latest-build --force
